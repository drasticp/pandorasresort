<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?>
<feed xmlns='http://www.w3.org/2005/Atom'
    xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'
    xmlns:blogger='http://schemas.google.com/blogger/2008'
    xmlns:georss='http://www.georss.org/georss'
    xmlns:gd="http://schemas.google.com/g/2005"
    xmlns:thr='http://purl.org/syndication/thread/1.0'>
    <id>tag:blogger.com,1999:blog-659383463377282367</id>
    <updated>2023-01-20T16:07:25.184-08:00</updated>
    <category term="android"/>
    <category term="css"/>
    <category term="html"/>
    <category term="orm"/>
    <title type='text'>Too Much Talk, Too Little Code</title>
    <subtitle type='html'>Often overly opinionated commentary on writing web and mobile applications.</subtitle>
    <link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/posts/default'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default'/>
    <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/'/>
    <link rel='hub' href='http://pubsubhubbub.appspot.com/'/>
    <author>
        <name>Don Archer</name>
        <uri>http://www.blogger.com/profile/04530356366419411562</uri>
        <email>noreply@blogger.com</email>
        <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
    </author>
    <generator version='7.00' uri='http://www.blogger.com'>Blogger</generator>
    <openSearch:totalResults>18</openSearch:totalResults>
    <openSearch:startIndex>1</openSearch:startIndex>
    <openSearch:itemsPerPage>25</openSearch:itemsPerPage>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-8520265435965923910</id>
        <published>2022-05-25T14:14:00.004-07:00</published>
        <updated>2022-05-25T14:14:54.380-07:00</updated>
        <title type='text'>Using WebAuthenticator with .NET Maui</title>
        <content type='html'>&lt;p&gt;&amp;nbsp;First create an authorization callback activity inside the Android assets folder:&amp;nbsp;&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;namespace MauiApp6.Platforms.Android&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; [Activity(NoHistory = true, LaunchMode = LaunchMode.SingleTop, Exported = true)]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; [IntentFilter(new[] { Intent.ActionView },&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Categories = new[] { Intent.CategoryDefault, Intent.CategoryBrowsable },&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DataScheme = &quot;ultranomadic&quot;)]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; internal class AuthCallbackActivity : WebAuthenticatorCallbackActivity&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public override void OnCreate(Bundle savedInstanceState, PersistableBundle persistentState)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; base.OnCreate(savedInstanceState, persistentState);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Modify the AndroidManifest.xml file to include this query node inside the manifest node.&amp;nbsp;&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;lt;queries&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;&amp;lt;intent&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;&amp;lt;action android:name=&quot;android.support.customtabs.action.CustomTabsService&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;&amp;lt;/intent&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;&amp;lt;/queries&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Finally, use the web authenticator to login.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; WebAuthenticatorResult authResult = await WebAuthenticator.Default.AuthenticateAsync(&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Uri(&quot;https://planner.ultranomadic.com/auth?returnUrl=ultranomadic://planner.ultranomadic.com&quot;),&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Uri(&quot;ultranomadic://&quot;));&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; string accessToken = authResult?.AccessToken;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; HttpClient client = new HttpClient();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(&quot;Bearer&quot;, accessToken);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var json = client.GetStringAsync(&quot;https://planner.ultranomadic.com/api/testauthget&quot;).Result;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/8520265435965923910/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2022/05/using-webauthenticator-with-net-maui.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/8520265435965923910'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/8520265435965923910'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2022/05/using-webauthenticator-with-net-maui.html' title='Using WebAuthenticator with .NET Maui'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-1950391010959134808</id>
        <published>2021-12-27T18:52:00.003-08:00</published>
        <updated>2021-12-27T18:52:38.673-08:00</updated>
        <title type='text'>Using Platform Specific Code Inside Xamarin.Forms</title>
        <content type='html'>&lt;p&gt;First declare an interface in the main project. Something like the following:&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;namespace myapp&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; public interface ILoginService&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; void DoLogin();&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Implement the interface in a concrete class inside the android project.&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;[assembly: Dependency(typeof(myapp.Droid.AndroidLoginService))]&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;namespace myapp.Droid&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;{&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; class AndroidLoginService : myapp.ILoginService&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public void DoLogin()&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* implement here */&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;p&gt;Notice the Dependency attribute. This registers the class with the dependency injection engine in Xamarin. Now you can use the implementation in the main project.&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-family: courier; font-size: x-small;&quot;&gt;var loginsvc = DependencyService.Get&amp;lt;ILoginService&amp;gt;();&lt;br /&gt;loginsvc.DoLogin();&lt;/span&gt;&lt;/div&gt;&lt;p&gt;Hopefully that helps you use platform specific implementations inside Xamarin.Forms.&amp;nbsp;&lt;/p&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/1950391010959134808/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2021/12/using-platform-specific-code-inside.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1950391010959134808'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1950391010959134808'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2021/12/using-platform-specific-code-inside.html' title='Using Platform Specific Code Inside Xamarin.Forms'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-2529153402662247540</id>
        <published>2020-04-24T22:11:00.002-07:00</published>
        <updated>2020-04-24T22:11:23.233-07:00</updated>
        <title type='text'>Global error handling in ASPNETCore</title>
        <content type='html'>Add the following to the StartUp.cs&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;if (env.IsDevelopment())&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;{&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; app.UseDeveloperExceptionPage();&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;}&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;{&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; app.UseExceptionHandler(&quot;/Error&quot;);&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; app.UseHsts();&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;}&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
In the controller add the following:&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;[AllowAnonymous]&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;public IActionResult Error()&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;{&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; return View(new ErrorViewModel&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });&lt;/span&gt;&lt;br /&gt;
}&lt;br /&gt;
&lt;br /&gt;
For access to the exception, use the IExceptionHandlerPathFeature as in the following code:&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;var exceptionHandlerPathFeature =&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; HttpContext.Features.Get&amp;lt;IExceptionHandlerPathFeature&amp;gt;();&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;if (exceptionHandlerPathFeature?.Error is FileNotFoundException)&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;{&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; ExceptionMessage = &quot;File error thrown&quot;;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;}&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;if (exceptionHandlerPathFeature?.Path == &quot;/index&quot;)&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;{&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; ExceptionMessage += &quot; from home page&quot;;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;}&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/2529153402662247540/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2020/04/global-error-handling-in-aspnetcore.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/2529153402662247540'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/2529153402662247540'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2020/04/global-error-handling-in-aspnetcore.html' title='Global error handling in ASPNETCore'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-1596522841881021309</id>
        <published>2020-04-24T21:54:00.000-07:00</published>
        <updated>2020-04-24T21:54:01.508-07:00</updated>
        <title type='text'>External Authentication in ASPMVC Net Core</title>
        <content type='html'>In the StartUp.cs file a few additions are needed to make external authorization work. First, this section needs to be added to the ConfigureServices method:&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;.AddCookie(options =&amp;gt; {&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; options.LoginPath = &quot;/auth&quot;;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; options.ReturnUrlParameter = &quot;ReturnUrl&quot;;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;})&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;.AddGoogle(options =&amp;gt; {&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; options.ClientId = &quot;[yourclientid]&quot;;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; options.ClientSecret = &quot;[yoursecret]&quot;;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; options.CallbackPath = &quot;/auth/signin-google&quot;;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; options.SignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;})&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
And later on in the Configure method make sure these lines are added.&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;app.UseAuthentication();&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;app.UseAuthorization();&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
Note that /auth/signin-google is not a path supplied by the application. Instead the mvc middleware handles this return and hands control over to /auth/afterauth (as specified in the RedirectUri of the Challenge result. This section goes in the auth controller:&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;public IActionResult GoogleLogin(string returnUrl= &quot;/&quot;)&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;{&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; return new ChallengeResult(&quot;Google&quot;, new AuthenticationProperties {&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; RedirectUri = Url.Content($&quot;/auth/afterauth?provider=Google&amp;amp;returnUrl={returnUrl}&quot;)&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; });&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;}&lt;/span&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/1596522841881021309/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2020/04/external-authentication-in-aspmvc-net.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1596522841881021309'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1596522841881021309'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2020/04/external-authentication-in-aspmvc-net.html' title='External Authentication in ASPMVC Net Core'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-5813849511338729957</id>
        <published>2020-04-18T15:55:00.001-07:00</published>
        <updated>2020-04-18T15:58:56.973-07:00</updated>
        <title type='text'>Easily adding Roles to ASP.NET Core</title>
        <content type='html'>In the Startup.cs file add the basic authorization middleware. For options, add a new policy. This policy will check for the presence of the admin role claim.&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;services.AddAuthorization(options =&amp;gt; {&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp;options.AddPolicy(&quot;admin&quot;, policy =&amp;gt; policy.RequireClaim(ClaimTypes.Role,&quot;admin&quot;));&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;});&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
In the authentication controller, add the claims to the user.&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;claims.AddRange(user.Roles.Select(r =&amp;gt; new Claim(ClaimTypes.Role, r)));&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
In the controller you want to secure, add the header to check the policy.&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;[Authorize(&quot;admin&quot;)]&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: x-small;&quot;&gt;public class AdminController : Controller {}&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/5813849511338729957/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2020/04/easily-adding-roles-to-aspnet-core.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/5813849511338729957'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/5813849511338729957'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2020/04/easily-adding-roles-to-aspnet-core.html' title='Easily adding Roles to ASP.NET Core'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-8869684854347959416</id>
        <published>2019-10-30T16:21:00.003-07:00</published>
        <updated>2019-10-30T16:21:30.962-07:00</updated>
        <title type='text'>Using HTTPS in the ASPNETCORE development server Kestrel</title>
        <content type='html'>To use SSL with the ASP.net Core development server, Kestrel, first export your certificate to a PFX file. Add the file to your project and then add the following section to your csproj:&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;lt;ItemGroup&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;None Update=&quot;mydomain.pfx&quot;&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;CopyToOutputDirectory&amp;gt;Always&amp;lt;/CopyToOutputDirectory&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/None&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;lt;/ItemGroup&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
This addition will cause the PFX to be coped to your output directory. After adding this to your csproj, add the following section to your appsettings.json file to use the exported certificate:&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&quot;Kestrel&quot;: {&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;Endpoints&quot;: {&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;HttpsInlineCertFile&quot;: {&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Url&quot;: &quot;https://test.mydomain.com&quot;,&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Certificate&quot;: {&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Path&quot;: &quot;mydomain.pfx&quot;,&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Password&quot;: &quot;mypfxpassword&quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: courier new, courier, monospace; font-size: x-small;&quot;&gt;}&lt;/span&gt;&lt;br /&gt;
&lt;div&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;Poof, you&#39;re secure.&lt;/div&gt;
        </content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/8869684854347959416/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2019/10/using-https-in-aspnetcore-development.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/8869684854347959416'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/8869684854347959416'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2019/10/using-https-in-aspnetcore-development.html' title='Using HTTPS in the ASPNETCORE development server Kestrel'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-1842232311609626530</id>
        <published>2019-08-10T15:18:00.002-07:00</published>
        <updated>2019-08-10T15:24:17.761-07:00</updated>
        <title type='text'>Json Serialzation in Entity Framework (EF Core 2.1)</title>
        <content type='html'>I&#39;ve had a number of instances where I want to serialize JSON into a single field in the database. In the past I resorted to a [NotMapped] field which held the complex object and a [JsonIgnore]d field which was serialized in EF to a Text SQL field.&lt;br /&gt;
&lt;br /&gt;
I recently discovered that EF Core 2.1 includes easy value conversions! In the example below, I have a Stay entity which has a serialized Drive object. Drive is declared on SQL Server as a Text column.&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;protected override void OnModelCreating(ModelBuilder modelBuilder)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp;base.OnModelCreating(modelBuilder);&lt;/span&gt;&lt;br /&gt;
&lt;div&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp;modelBuilder.Entity&amp;lt;Stay&amp;gt;()&lt;br /&gt;&amp;nbsp; &amp;nbsp;.Property(s =&amp;gt; s.Drive)&lt;br /&gt;&amp;nbsp; &amp;nbsp;.HasConversion(&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; d =&amp;gt; JsonConvert.SerializeObject(d), &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; d =&amp;gt; JsonConvert.DeserializeObject&amp;lt;Drive&amp;gt;(d)&lt;br /&gt;&amp;nbsp; &amp;nbsp;);&lt;br /&gt;}&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
Viola! No need for the extra fields on the model class.&lt;/div&gt;
        </content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/1842232311609626530/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2019/08/json-serialzation-in-entity-framework.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1842232311609626530'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1842232311609626530'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2019/08/json-serialzation-in-entity-framework.html' title='Json Serialzation in Entity Framework (EF Core 2.1)'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-1450607294298597297</id>
        <published>2019-05-20T23:18:00.002-07:00</published>
        <updated>2019-05-20T23:21:21.983-07:00</updated>
        <title type='text'>Using lit-html inside an ASP.MVC .NET Core application with Typescript</title>
        <content type='html'>&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;This is the process for getting a lit-element component up and running inside and ASP.MVC .NET Core application. &lt;/span&gt;&lt;/div&gt;
&lt;b id=&quot;docs-internal-guid-05435ceb-7fff-ba95-f1c4-029bb21f0214&quot; style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Prerequisites: .NET Core, VSCode, Node. Install these before you start. You should be able to run “dotnet”, “code”, and “npm” successfully from a command line. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Create a project directory. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;md Example.Web&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Change to the project directory. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;cd Example.Web&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Create a new ASP.MVC project inside that directory. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;dotnet new mvc&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Open Visual Studio Code inside the new directory. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;code .&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Press F5 to start debugging the new app. VSCode will prompt you for an environment. Select “.NET Core” and a launch.json file will be created inside the .vscode directory. If you want to change the way the project launches when you debug, modify this launch.json file. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Press F5 again to start debugging. VSCode should launch your default browser with the web site up and running. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Return to VSCode and open a new terminal. Install lit-element. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;npm install lit-element&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Npm will create a “node_modules” subdirectory in your project. Just deal with the fact that now you have this folder related to node and don’t try to change the directory. It’s not likely worth it. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Create a scripts folder. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;md scripts&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Inside the scripts folder use VSCode to create a new file called my-element.ts. The following should be in the file: &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #c586c0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; { &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;LitElement&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;html&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; } &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #c586c0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&#39;../node_modules/lit-element/lit-element&#39;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #4ec9b0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;MyElement&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;extends&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #4ec9b0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;LitElement&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; {&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #dcdcaa; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;render&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;(){&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #c586c0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #dcdcaa; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;html&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Hello .NET Core and lit-html&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; }&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;customElements&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #dcdcaa; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;define&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&#39;my-element&#39;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;MyElement&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Save the file. Also inside the scripts folder, use VSCode to create another new file called main.js. The following text should be in the file. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #c586c0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; { &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;MyElement&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; } &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #c586c0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&#39;./my-element&#39;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Save the file. Using your terminal window, install typescript globally if you have not previously used typscript. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;npm install -g typescript&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Use VSCode to create a file called “tsconfig.json” in the root of your web project. The following text should be in the file. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: {&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;lib&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: [&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;es6&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;],&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;es6&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;noImplicitAny&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;removeComments&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;preserveConstEnums&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;sourceMap&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;true&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;},&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;include&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: [ &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; ],&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;exclude&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;: [ &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;node_modules&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; ]&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Run the typescript compiler in a terminal window. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;tsc &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;You may see some errors from the lit-html compilation. I’m not what these are about but it seems safe to ignore them for now. You should now see my-element.js and my-element.map.js inside your scripts folder. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Now install webpack globally using npm in a terminal window if you have not previously used webpack. &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;consolas&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline;&quot;&gt;npm install -g webpack&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Note that the typescript and webpack installs only need to be done once on your machine. For future projects, you will not need to install them again. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Use VSCode to create “webpack.config.js” in the root of your web project. The following text should be in the file&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; = &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #dcdcaa; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;require&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&#39;path&#39;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #4ec9b0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #4ec9b0; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;exports&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; = {&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;mode:&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&#39;development&#39;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;entry:&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&#39;./scripts/main.js&#39;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;output:&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; {&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;path:&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #dcdcaa; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;resolve&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;__dirname&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&#39;wwwroot/js&#39;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;),&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;filename:&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&#39;bundle.js&#39;&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; }&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;};&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;This configuration will tell webpack take everything that is referenced in the main.js file and bundle it into a single file inside wwwrooot/js/bundle.js. Run webpack from a terminal.&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;webpack &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;You should now see a “bundle.js” file inside wwwroot/js. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Edit the file /Views/Home/Index.html using vscode. Paste the following lines in at the end of the file. &lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #9cdcfe; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;src&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #d4d4d4; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #ce9178; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&quot;/js/bundle.js&quot;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;script&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.6285714285714286; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;my-element&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #569cd6; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;my-element&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: grey; font-family: &amp;quot;consolas&amp;quot;; font-size: 10.5pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;b style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/b&gt;
&lt;br /&gt;
&lt;div dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;
&lt;span style=&quot;background-color: transparent; color: black; font-family: &amp;quot;arial&amp;quot;; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline;&quot;&gt;Return to the browser and you should see your lit-html component on the page. &lt;/span&gt;&lt;/div&gt;
&lt;br /&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/1450607294298597297/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2019/05/using-lit-html-inside-aspmvc-net-core.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1450607294298597297'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1450607294298597297'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2019/05/using-lit-html-inside-aspmvc-net-core.html' title='Using lit-html inside an ASP.MVC .NET Core application with Typescript'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-6304446831381251288</id>
        <published>2017-04-03T08:27:00.000-07:00</published>
        <updated>2017-07-13T08:13:35.309-07:00</updated>
        <title type='text'>Publishing to a Nuget Server</title>
        <content type='html'>&lt;span style=&quot;font-family: inherit;&quot;&gt;First, the Nuget CLI needs to be installed on your machine. Place the .exe in a folder and add that folder to your local path. The nuget CLI exe can be found here:&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;&quot;&gt;https://dist.nuget.org/&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;Run the following command one time to set the api key permanently for your nuget server.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;&quot;&gt;nuget setApiKey yourapikey -source http://yournugeturl&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;Change directories to where your .csproj file is located and run this command:&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;&quot;&gt;nuget spec&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;The command above will generate a nuspec file. Edit the nuspec file and delete or fill in any elements without $. The $&#39;s indicate variables that will be automatically replaced during the pack process. Do not change those elements.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;Next edit your assembly info for your project:&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;i&gt;Edit /properties/AssemblyInfo.cs using Visual Studio&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;In the assembly info file you&#39;ll find all the properties for your project. I recommend that you let Visual Studio supply the build and revision numbers (so 1.0.*) as mentioned in the comments in this file. Make sure other values are set to your liking.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;Next, from a command prompt, run the following command:&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;&quot;&gt;nuget pack&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;This will package up your project and create a .nupkg file for upload to the nuget server.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Now you&#39;re ready to push your package to the server. Run the following command and you&#39;re done:&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;
&lt;span style=&quot;font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;&quot;&gt;nuget push yourpack.nupkg -source http://yournugeturl&lt;/span&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/6304446831381251288/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2017/04/publishing-to-nuget-server.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/6304446831381251288'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/6304446831381251288'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2017/04/publishing-to-nuget-server.html' title='Publishing to a Nuget Server'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-3174979885658614733</id>
        <published>2015-09-17T09:43:00.000-07:00</published>
        <updated>2017-07-13T08:14:56.883-07:00</updated>
        <category scheme="http://www.blogger.com/atom/ns#" term="css"/>
        <category scheme="http://www.blogger.com/atom/ns#" term="html"/>
        <title type='text'>Efficient CSS Using Child-Selectors</title>
        <content type='html'>&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
So, I&#39;m working away on &lt;a href=&quot;http://acaexpress.com/&quot;&gt;acaexpress.com&lt;/a&gt; and I find myself forgetting this over and over. I figured it would be a good idea to write a blog post about it to remind me there&#39;s a better way.&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
Here&#39;s a typical use of CSS to assign margin to some images:&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; .issuerpics { margin: 15px; }&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;lt;div style=&quot;text-align:center&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logobluecross.png&quot; alt=&quot;Blue Cross&quot; class=&quot;issuerpics&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logoaetna.png&quot; alt=&quot;Aetna&quot; class=&quot;issuerpics&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logocoventry.png&quot; alt=&quot;Coventry One&quot; class=&quot;issuerpics&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logocigna.png&quot; alt=&quot;Cigna&quot; class=&quot;issuerpics&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;~=logouhone.png&quot; alt=&quot;United Health One&quot; class=&quot;issuerpics&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
Note that each image has a CSS class assigned to it. It&#39;s a logical technique, but not the most elegant one. Below, the parent element (div) is assigned a class and then the CSS is written to style the child elements of that class. It&#39;s less code, more readable, and in general more elegant.&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; .issuerpics img { margin: 15px; }&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;lt;div class=&quot;issuerpics&quot; style=&quot;text-align:center&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logobluecross.png&quot; alt=&quot;Blue Cross&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logoaetna.png&quot; alt=&quot;Aetna&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logocoventry.png&quot; alt=&quot;Coventry One&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logocigna.png&quot; alt=&quot;Cigna&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;lt;img src=&quot;=logouhone.png&quot; alt=&quot;United Health One&quot; /&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot;&gt;
&lt;span style=&quot;color: #222222; font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace; font-size: x-small;&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;gmail_default&quot; style=&quot;color: #222222; font-family: tahoma, sans-serif; font-size: small;&quot;&gt;
In general, it&#39;s best to make the code as readable as possible. Less code is usually better as long as it doesn&#39;t sacrifice readability. This change accomplishes both.&amp;nbsp;&lt;/div&gt;
        </content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/3174979885658614733/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2015/09/efficient-css-using-child-selectors.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/3174979885658614733'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/3174979885658614733'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2015/09/efficient-css-using-child-selectors.html' title='Efficient CSS Using Child-Selectors'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-5499969448302249639</id>
        <published>2014-08-14T11:22:00.003-07:00</published>
        <updated>2015-09-17T09:46:33.204-07:00</updated>
        <category scheme="http://www.blogger.com/atom/ns#" term="android"/>
        <category scheme="http://www.blogger.com/atom/ns#" term="orm"/>
        <title type='text'>Lime ORM for Android</title>
        <content type='html'>Hey friends. I wanted to let everyone know I&#39;ve released a little library called Lime for Android. It&#39;s an ORM layer inspired by Microsoft&#39;s Entity Framework. I feel it has a few advantages over some of the other layers out there.&lt;br /&gt;
&lt;br /&gt;
&lt;ul&gt;
&lt;li&gt;It&#39;s fast. Lime uses reflection to populate objects from cursors, but object inspection is done only once and cached.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;It&#39;s efficient. Lists of objects are backed by cursors so scrolling through huge data sets only requires conservative memory allocation.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;It&#39;s flexible. Most layers in Lime are exposed to make using as much or as little as necessary a simple matter of choice.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;It&#39;s familiar. Lime works with Android&#39;s content providers, observers, and loaders. It&#39;s all the things you already know, but easier.&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
Stop by the Lime site on Bitbucket and take it for a spin. I think you&#39;ll dig it.&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;a href=&quot;https://bitbucket.org/limeteam/lime/wiki/Home&quot;&gt;https://bitbucket.org/limeteam/lime/wiki/Home&lt;/a&gt;&lt;/div&gt;
        </content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/5499969448302249639/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2014/08/lime-orm-for-android.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/5499969448302249639'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/5499969448302249639'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2014/08/lime-orm-for-android.html' title='Lime ORM for Android'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-8010535248595407384</id>
        <published>2014-07-09T13:57:00.000-07:00</published>
        <updated>2015-09-17T09:46:47.275-07:00</updated>
        <category scheme="http://www.blogger.com/atom/ns#" term="android"/>
        <title type='text'>Pull To Refresh on Android with SwipeRefreshLayout</title>
        <content type='html'>In March of 2014, without much fanfare, Google added the &lt;a href=&quot;http://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.html&quot;&gt;SwipeRefreshLayout &lt;/a&gt;widget to the Android SDK. This addition formalizes the pull-to-refresh mechanism on Android. Let&#39;s take a look at how we&#39;ll use it.&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;http://4.bp.blogspot.com/-qK6iqCTSID0/U72seYXXhZI/AAAAAAAAVL8/CEGe9mNUG9A/s1600/Screen+Shot+2014-07-09+at+3.52.09+PM.png&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://4.bp.blogspot.com/-qK6iqCTSID0/U72seYXXhZI/AAAAAAAAVL8/CEGe9mNUG9A/s1600/Screen+Shot+2014-07-09+at+3.52.09+PM.png&quot; /&gt;&lt;/a&gt;First, make sure you have R19.1.0 or newer version of the &lt;a href=&quot;http://developer.android.com/tools/support-library/index.html&quot; target=&quot;_blank&quot;&gt;Android Support Library&lt;/a&gt; in your project. R20 is the first version of the library to include the new layout. Once it&#39;s in your project, create a simple activity layout with the SwipeRefreshLayout at the top of the view hierarchy. While this isn&#39;t explicitly necessary, it makes sense that the entire activity be pulled down to refresh.&lt;br /&gt;
&lt;br /&gt;
It is explicitly necessary that this layout have only one child. In this example, we&#39;ll make the only child a TextView for simplicity. Here&#39;s a look at our activity layout:&lt;br /&gt;
&lt;br /&gt; &lt;code&gt; &amp;lt;android.support.v4.widget.SwipeRefreshLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:id=&quot;@+id/layout&quot;&amp;nbsp;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;android:layout_width=&quot;match_parent&quot;&amp;nbsp;&lt;/code&gt;&lt;br /&gt; &lt;code&gt;android:layout_height=&quot;match_parent&quot;&amp;gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;&lt;/code&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;&amp;lt;TextView android:id=&quot;@+id/text1&quot;&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;android:layout_width=&quot;wrap_content&quot;&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;android:layout_height=&quot;wrap_content&quot;&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;android:text=&quot;@string/hello_world&quot; /&amp;gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;&lt;/code&gt;
&lt;code&gt;&amp;lt;/android.support.v4.widget.SwipeRefreshLayout&amp;gt;
&lt;/code&gt;
&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;&lt;/code&gt;
&lt;br /&gt;
&lt;div class=&quot;p1&quot;&gt;
&lt;span class=&quot;s1&quot;&gt;Now that we have the layout added, we&#39;ll need a little code to make the refresh happen. The new layout has a method to setOnRefreshListener. So let&#39;s take a look at our activity with that listener connected:&lt;/span&gt;&lt;/div&gt;
&lt;code&gt;&lt;br /&gt;&lt;/code&gt;
&lt;code&gt;
public class MainActivity extends Activity {&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;&lt;/code&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;SwipeRefreshLayout layout;&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;TextView text1;&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;&lt;/code&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;OnRefreshListener refreshListener = new OnRefreshListener() {&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; @Override
      public void onRefresh() {&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;text1.setText(new Date().toString());&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;layout.setRefreshing(false);&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;};&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;@Override
   protected void onCreate(Bundle savedInstanceState) {&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;super.onCreate(savedInstanceState);&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;setContentView(R.layout.activity_main);&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;layout = (SwipeRefreshLayout)findViewById(R.id.layout);&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;text1 = (TextView)findViewById(R.id.text1);&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;layout.setOnRefreshListener(refreshListener);&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;layout.setColorSchemeResources(color.holo_blue_dark, color.holo_blue_light,color.holo_orange_dark, color.holo_green_light);&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;nbsp; &amp;nbsp;}&amp;nbsp;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;}
&lt;/code&gt;
&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;&lt;/code&gt;
&lt;br /&gt;
&lt;div class=&quot;p1&quot;&gt;
Notice that we need to call layout.setRefreshing(false) when our refresh code is finished. This method stops the animation and let&#39;s the layout know that our work is done. Typically this would be called when a loader in the activity completes.&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;p1&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;p1&quot;&gt;
Also, take a look at &lt;a href=&quot;http://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.html#setColorSchemeResources(int, int, int, int)&quot; target=&quot;_blank&quot;&gt;SwipeRefreshLayout.setColorSchemeResources&lt;/a&gt;. This method allows you to choose 4 colors to be in the animated bar while the layout is refreshing.&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;p1&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;p1&quot;&gt;
SwipeRefreshLayout is a great addition to the SDK and goes a long way to standardizing a user interaction method. Implementing will give your users comfort that their app is acting in a standard fashion and also save you space on the ActionBar where your refresh button previously would have been!&lt;/div&gt;
        </content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/8010535248595407384/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2014/07/pull-to-refresh-on-android-with.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/8010535248595407384'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/8010535248595407384'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2014/07/pull-to-refresh-on-android-with.html' title='Pull To Refresh on Android with SwipeRefreshLayout'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-qK6iqCTSID0/U72seYXXhZI/AAAAAAAAVL8/CEGe9mNUG9A/s72-c/Screen+Shot+2014-07-09+at+3.52.09+PM.png" height="72" width="72"/>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-211828758870984367</id>
        <published>2012-08-09T08:43:00.001-07:00</published>
        <updated>2012-08-09T09:02:19.098-07:00</updated>
        <title type='text'>Emulating the Nexus 7 Display Properties</title>
        <content type='html'>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;http://3.bp.blogspot.com/-g1i-At-8Lsw/UCPbda9QY3I/AAAAAAAALSw/EYz8-f7WGqU/s1600/Nexus7pic.jpg&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://3.bp.blogspot.com/-g1i-At-8Lsw/UCPbda9QY3I/AAAAAAAALSw/EYz8-f7WGqU/s1600/Nexus7pic.jpg&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
Ahh the new Nexus 7 tablet is a sweet piece of hardware! On top of that, it&#39;s selling like mad. Are you on the waiting list, but need to make sure your apps are ready for it?&amp;nbsp;This blog post is about creating an emulator image to emulate the display of the Nexus 7.&lt;br /&gt;
&lt;br /&gt;
Before we start, please read the Android developer blog post on getting ready for Nexus 7. It&#39;s a good start to our discussion. 

&lt;a href=&quot;http://android-developers.blogspot.com/2012/07/getting-your-app-ready-for-jelly-bean.html&quot;&gt;Getting Your App Ready for Jelly Bean and Nexus 7&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
Now that you&#39;re up to date, you know the new tablet is one of the first to sport the tvdpi screen density. If your app isn&#39;t ready for it, you might be in trouble. So, what do we need to do to set up an emulator for this density?&lt;br /&gt;
&lt;br /&gt;
&lt;ol&gt;
&lt;li&gt;Open AVD Manager and create a new virtual device named &quot;nexus_7&quot;.&lt;/li&gt;
&lt;li&gt;Unless you have set up the hardware&amp;nbsp;accelerated&amp;nbsp;emulator set the &lt;b&gt;&quot;Target:&quot; to Android 2.3.3&lt;/b&gt;. This will run fast enough to test your apps for the display. Note that you&#39;re not creating a real Nexus 7 emulator but this will be sufficient to test your app for the display!&amp;nbsp;If you really want to test Jelly Bean, you&#39;ll want to set up the hardware&amp;nbsp;acceleration&amp;nbsp;for your emulator. Hopefully we&#39;ll discuss that in another blog post.&lt;/li&gt;
&lt;li&gt;Set up a sufficient SD card size.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Under &lt;b&gt;&quot;Skin:&quot; &lt;/b&gt;choose resolution and specify the Nexus 7 resolution of&lt;b&gt; 720 x 1280.&lt;/b&gt; Note that we put 720 first because we want the emulator to start up in portrait mode just like the device.&lt;/li&gt;
&lt;li&gt;Under &lt;b&gt;&quot;Hardware:&quot;, choose an Abstracted LCD density of 213&lt;/b&gt;. This is tvdpi!&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;
Now you&#39;re set! &lt;i&gt;When you start the emulator you will probably want to set the Launch Options to scale the display to 8 inches,&lt;/i&gt; especially if you&#39;re on a laptop screen. Now you should be able to test your layouts for the new Nexus 7. Have fun.&amp;nbsp;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;http://3.bp.blogspot.com/-AKDod85hLxo/UCPahGSRPQI/AAAAAAAALSo/qw9J5JDZMTI/s1600/nexus7.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;http://3.bp.blogspot.com/-AKDod85hLxo/UCPahGSRPQI/AAAAAAAALSo/qw9J5JDZMTI/s320/nexus7.png&quot; width=&quot;234&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;
&lt;br /&gt;&lt;/div&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/211828758870984367/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2012/08/emulating-galaxy-nexus-7-display.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/211828758870984367'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/211828758870984367'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2012/08/emulating-galaxy-nexus-7-display.html' title='Emulating the Nexus 7 Display Properties'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-g1i-At-8Lsw/UCPbda9QY3I/AAAAAAAALSw/EYz8-f7WGqU/s72-c/Nexus7pic.jpg" height="72" width="72"/>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-1537990607317441508</id>
        <published>2012-02-18T07:04:00.000-08:00</published>
        <updated>2012-02-18T07:04:41.287-08:00</updated>
        <title type='text'>AT&amp;T Mobile App Hackathon Dallas</title>
        <content type='html'>I&#39;ll be attending the upcoming Hackathon this weekend representing the Dallas GTUG. Get signed up on Eventbrite! There are still a few spots left.&lt;br /&gt;
&lt;br /&gt;
About the Event:&lt;br /&gt;
&amp;nbsp;Mobile App Hackathons is an event geared towards getting your app, business or idea venture to market!
We will provide on-the-ground technical support, known as &quot;senseis&quot;, from AT&amp;amp;T, Microsoft, Amazon, HTC and others to help you accelerate the execution of your ideas/business, rapidly kickstart a prototype mobile application and spin-off a successful venture.&lt;br /&gt;
&lt;br /&gt;
Cost: FREE&lt;br /&gt;
Kickoff: Friday, February 17, 2012 6:00PM-8:00PM &lt;br /&gt;
Hackathon: Saturday, February 18, 2012 at 10:00AM-8:00PM &lt;br /&gt;
Sign Up: &lt;a href=&quot;http://mobileappdfw2.eventbrite.com/&quot;&gt;http://mobileappdfw2.eventbrite.com/&lt;/a&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/1537990607317441508/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2012/02/at-mobile-app-hackathon-dallas.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1537990607317441508'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/1537990607317441508'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2012/02/at-mobile-app-hackathon-dallas.html' title='AT&amp;T Mobile App Hackathon Dallas'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-3528246317809474468</id>
        <published>2011-11-07T07:01:00.000-08:00</published>
        <updated>2011-11-07T07:28:28.467-08:00</updated>
        <title type='text'>Startup Weekend Google Tech Bootcamp</title>
        <content type='html'>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;http://3.bp.blogspot.com/-lcBiUR3SWMI/Trf0RePmBJI/AAAAAAAAIrY/Sr9vEnhPAds/s1600/images.jpg&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;132&quot; src=&quot;http://3.bp.blogspot.com/-lcBiUR3SWMI/Trf0RePmBJI/AAAAAAAAIrY/Sr9vEnhPAds/s200/images.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
I&#39;m excited to annouce the upcoming SW / GTUG Bootcamp. There will be lots of good Android information and a code jam to get you ready for Startup Weekend. Here are the details:&lt;br /&gt;
&lt;blockquote class=&quot;tr_bq&quot;&gt;
Startup Weekend - Google Tech Bootcamp&lt;br /&gt;
Admission $5&lt;br /&gt;
Saturday November 12, 1:00pm - 5:00pm&lt;br /&gt;
ng Connect Gravity Centre&lt;br /&gt;
2900 West Plano Pkwy Plano, TX 75075&lt;/blockquote&gt;
The following topics are on the agenda with more to come soon:&lt;br /&gt;
&lt;ul&gt;
&lt;li&gt;Android Cookbook - Scraps and Ideas for Startup Weekend&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Getting Started with App Engine&lt;/li&gt;
&lt;/ul&gt;
Keep an eye on this page for updates!</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/3528246317809474468/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2011/11/startup-weekend-google-tech-bootcamp.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/3528246317809474468'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/3528246317809474468'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2011/11/startup-weekend-google-tech-bootcamp.html' title='Startup Weekend Google Tech Bootcamp'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-lcBiUR3SWMI/Trf0RePmBJI/AAAAAAAAIrY/Sr9vEnhPAds/s72-c/images.jpg" height="72" width="72"/>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-5726053681260613433</id>
        <published>2011-09-26T13:03:00.000-07:00</published>
        <updated>2011-09-26T13:21:25.877-07:00</updated>
        <title type='text'>Software Versioning</title>
        <content type='html'>This post describes a strategy for version numbering software builds. We’ll assume that we have 4 digit places to work with. Before we look at how to version a build, let’s look at the audience for each section of the version number. In this example, we’ll use version v1.2.35.76. 

 &lt;br /&gt;
&lt;br /&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;http://3.bp.blogspot.com/-yEKqtSdXTBs/ToDaIGYwedI/AAAAAAAAIjk/nwCs9uU1KTM/s1600/version.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;100&quot; src=&quot;http://3.bp.blogspot.com/-yEKqtSdXTBs/ToDaIGYwedI/AAAAAAAAIjk/nwCs9uU1KTM/s200/version.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;br /&gt;
Each section of the version has a different “owner”. By investigating what each part of the organization requires from a version number, we can plan a numbering system effectively.&lt;br /&gt;
&lt;br /&gt;
&lt;b&gt;Numbering Versions:&amp;nbsp;&lt;/b&gt;&lt;br /&gt;
&lt;br /&gt;
The first two sections of a version number are owned by marketing. I mean &quot;owned&quot; in that the marketing organization should control what appears here. Imagine that this is the customer-facing section of your version number. From a marketing perspective, code changes may result in an increment from v1.2 to v.1.3 or we may decide to jump to v2.0. If we imagine that marketing owns the first two digits, none of the rest of the business is impacted by these decisions. We can do what&#39;s best and most meaningful for the customer.&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp;The third section (35 in our example) is owned by the Quality Assurance and Testing organization. In most cases, QA will want this number to perpetually increment with each build they receive. So, if they’ve just received version X.X.34.X, they will expect the next version to be X.X.35.X. &lt;i&gt;This number should never reset to 0! &lt;/i&gt;Having assigned the 3rd section completely to QA, we can assume they will ignore every other section. Marketing will be free to increment (or decrement) the first two sections and dev can have their way with the fourth.&lt;br /&gt;
&lt;br /&gt;
The fourth section (76 in the example) is owned by the development organization. Each time a build is produced to be shared outside of the developers desk, this number should be incremented. This way if a manager reports an issue, the question “What build do you have?” will always yield a useful answer. &lt;i&gt;This number should also never reset to 0! &lt;/i&gt;By constantly&amp;nbsp;incremental&amp;nbsp;this number, dev will always know where a bug occurs when it is reported.&lt;br /&gt;
&lt;br /&gt;
&lt;b&gt;When to Version:&amp;nbsp;&lt;/b&gt;&lt;br /&gt;
&lt;br /&gt;
As we’ve said, the final “build number” section of the version should be incremented each time a build leaves the developers desk. But when do we change the other numbers? The answer is as soon as possible. 
&lt;br /&gt;
&lt;br /&gt;
For example, let’s say you’ve just delivered v1.2.35.76 to QA. Your very next code change should be to increment the QA section from 35 to 36 because you know that all further changes will be targeting the 36 QA release.&lt;br /&gt;
&lt;br /&gt;
Similarly, as soon as marketing decides that there is funding to deliver a v1.5 of the product, we should increment our first two digits. Anyone can look in our source code system at any time and know that we&#39;re contributing code to what will become the revision 1.5.&lt;br /&gt;
&lt;br /&gt;
By incrementing immediately after you generate a release, you’re ensuring that if someone pulls a build at any time, they will have the correct version number.&lt;br /&gt;
&lt;br /&gt;</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/5726053681260613433/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2011/09/software-versioning.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/5726053681260613433'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/5726053681260613433'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2011/09/software-versioning.html' title='Software Versioning'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-yEKqtSdXTBs/ToDaIGYwedI/AAAAAAAAIjk/nwCs9uU1KTM/s72-c/version.png" height="72" width="72"/>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-4237716001769426845</id>
        <published>2011-05-05T13:00:00.000-07:00</published>
        <updated>2017-07-13T08:15:24.478-07:00</updated>
        <title type='text'>Landing Activity Icons The Easy Way</title>
        <content type='html'>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;http://1.bp.blogspot.com/-DNSlKVQwe64/ToMsgYJ0nVI/AAAAAAAAIj0/B9nIy4NV5eY/s1600/facebook.png&quot; imageanchor=&quot;1&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-DNSlKVQwe64/ToMsgYJ0nVI/AAAAAAAAIj0/B9nIy4NV5eY/s1600/facebook.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
Many Android applications include a landing activity or a &quot;main page&quot; full of icon options. Typically this activity does little more than throw intents to launch other Activities when a user clicks one of the icons. In this post, I&#39;m going to take advantage of the &lt;a href=&quot;http://developer.android.com/reference/android/view/View.html#attr_android:onClick&quot;&gt;onClick&lt;/a&gt;, &lt;a href=&quot;http://developer.android.com/reference/android/view/View.html#attr_android:tag&quot;&gt;tag&lt;/a&gt;, and &lt;a href=&quot;http://developer.android.com/reference/android/widget/TextView.html#attr_android:drawableTop&quot;&gt;drawableTop&lt;/a&gt;&amp;nbsp;attributes of TextView to make this work with very little code.&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp;Let&#39;s imagine that I&#39;d like to write a media playing application that includes main activity icons for Music, Photos, and Video. For each icon on the landing activity, I&#39;m going to use just a tiny bit of xml in my layout:&lt;br /&gt;
&lt;br /&gt;
&lt;code&gt;
&amp;lt;TextView&lt;br /&gt; android:text=&quot;Music&quot;&lt;br /&gt; android:drawableTop=&quot;@drawable/icon_music&quot;&lt;br /&gt; style=&quot;@style/mainicon&quot;&lt;br /&gt; android:tag=&quot;com.example.action.MUSIC&quot;/&amp;gt;
&lt;/code&gt;
&lt;br /&gt;
&lt;br /&gt;
First, you&#39;ll notice that the text and drawableTop attributes specify the drawable and the text for the icon. Using drawableTop keeps you from having to define a linear layout for each icon to stack the icon on the text.  Here you can do it with just the TextView element and that&#39;s all.&lt;br /&gt;
&lt;br /&gt;
Second, notice the style attribute. Here&#39;s the style I&#39;ve defined for a main icon:&lt;br /&gt;
&lt;br /&gt;
&lt;code&gt;
&amp;lt;resources&amp;gt;&lt;br /&gt;
&amp;lt;style name=&quot;mainicon&quot;&amp;gt;&lt;br /&gt;
&amp;lt;item name=&quot;android:layout_width&quot;&amp;gt;100dp&amp;lt;/item&amp;gt;&lt;br /&gt;
&amp;lt;item name=&quot;android:layout_height&quot;&amp;gt;wrap_content&amp;lt;/item&amp;gt;&lt;br /&gt;
&amp;lt;item name=&quot;android:gravity&quot;&amp;gt;center&amp;lt;/item&amp;gt;&lt;br /&gt;
&amp;lt;item name=&quot;android:clickable&quot;&amp;gt;true&amp;lt;/item&amp;gt;&lt;br /&gt;
&amp;lt;item name=&quot;android:onClick&quot;&amp;gt;click&amp;lt;/item&amp;gt;&lt;br /&gt;
&amp;lt;/style&amp;gt;&lt;br /&gt;
&amp;lt;/resources&amp;gt;
&lt;/code&gt;
&lt;br /&gt;
&lt;br /&gt;
The obvious bits of style specify the height, width, and gravity. What isn&#39;t so obvious is the definition of clickable and onClick. Basically, the onClick attribute is telling every View that has this style to execute the method called &quot;click&quot; in the parent Activity. But wait, hows that going to work? We&#39;re telling every icon to run exactly the same code. Here&#39;s the code for the click event method:&lt;br /&gt;
&lt;br /&gt;
&lt;code&gt;
public void click(View view) {&lt;br /&gt;
&amp;nbsp; &amp;nbsp;String action = (String) view.getTag();&lt;br /&gt;
&amp;nbsp; &amp;nbsp;Intent intent = new Intent(action);&lt;br /&gt;
&amp;nbsp; &amp;nbsp;startActivity(intent);&lt;br /&gt;
}
&lt;/code&gt;
&lt;br /&gt;
&lt;br /&gt;
The click method pulls the tag from the view that was clicked and fires an Intent using that string as the action. Take a look again at the XML that defines our music icon. See the tag attribute?&lt;br /&gt;
&lt;br /&gt;
Now, there&#39;s one final step to make this work. The AndroidMainifest.xml must be modified so that the music Activity knows how to receive the intent we&#39;re throwing. Easy:&lt;br /&gt;
&lt;br /&gt;
&lt;code&gt;
&amp;lt;activity android:name=&quot;.Music&quot;&amp;gt;&lt;br /&gt;
&amp;lt;intent-filter&amp;gt;&lt;br /&gt;
&amp;lt;action android:name=&quot;com.example.action.MUSIC&quot;/&amp;gt;&lt;br /&gt;
&amp;lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&amp;gt;&lt;br /&gt;
&amp;lt;/intent-filter&amp;gt;&lt;br /&gt;
&amp;lt;/activity&amp;gt;
&lt;/code&gt;
&lt;br /&gt;
&lt;br /&gt;
The &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/intent-filter-element.html&quot;&gt;intent filter&lt;/a&gt; will route all of the action.MUSIC intents to the Music activity. Hopefully this will simplify your code and clean things up a bit Have fun.</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/4237716001769426845/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2011/05/landing-activity-icons-easy-way.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/4237716001769426845'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/4237716001769426845'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2011/05/landing-activity-icons-easy-way.html' title='Landing Activity Icons The Easy Way'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-DNSlKVQwe64/ToMsgYJ0nVI/AAAAAAAAIj0/B9nIy4NV5eY/s72-c/facebook.png" height="72" width="72"/>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-659383463377282367.post-7189389496409593587</id>
        <published>2011-05-01T12:59:00.000-07:00</published>
        <updated>2011-09-28T07:17:14.489-07:00</updated>
        <title type='text'>Deep Linking in Android Applications</title>
        <content type='html'>I&#39;d like to write a little bit about best practice ideas for loading data in Android applications. I&#39;m hoping to encourage you to rethink how you visualize an Android application. In general I&#39;m going to advocate the use of &lt;a href=&quot;http://developer.android.com/guide/topics/intents/intents-filters.html#ires&quot;&gt;implicit intents&lt;/a&gt; and &lt;a href=&quot;http://developer.android.com/guide/topics/fundamentals/loaders.html&quot;&gt;loaders&lt;/a&gt;. Here&#39;s my main point of the post:&lt;br /&gt;
&lt;br /&gt;
Good Android applications can be started from any Activity.&lt;br /&gt;
&lt;br /&gt;
Here&#39;s the issue. A lot of mobile programmers come from a history of designing applications that load view controllers in a sequence. iOS and WinMo applications typically launch by firing up a specific controller. Many developers will make this a splash page or a welcome screen of some sort. From there, users navigate through the app, but the developer is always sure that the code in the starting controller has executed. It often becomes a sort of dumping ground for &quot;init&quot; code.&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp;Android isn&#39;t designed this way. You should think of your Android application as a mesh of Activities like a web site is a mesh of pages. You can&#39;t (and shouldn&#39;t) control how your user enters your application. Consider Amazon.com for example. A sizable amount of traffic to the site does not come in through the home page. Many people post links to specific product pages and the design encourages traffic to enter any place in the site. Effectively there is no front door.&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp;Good applications on Android are the same. They all offer deep-linking through the Intent mechanism. In this post, I&#39;m not going to describe how intents work. I&#39;ll assume you know the basics. Most app developers know how to start an activity using an explicit intent:&lt;br /&gt;
&lt;br /&gt;
&lt;span class=&quot;Apple-style-span&quot; style=&quot;background-color: white; color: #073763; font-family: &#39;Courier New&#39;, Courier, monospace; font-size: 15px; line-height: 20px;&quot;&gt;startActivity(new Intent(context, MovieActivity.class));&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
Note that the explicit intent includes a class reference to the Activity you&#39;re launching. While this gets the job done, it doesn&#39;t open any doors for other apps to deep link into yours. Instead you should use an implicit intent such as the following:&lt;br /&gt;
&lt;br /&gt;
&lt;span class=&quot;Apple-style-span&quot; style=&quot;background-color: white; color: #0c343d; font-family: &#39;Courier New&#39;, Courier, monospace; font-size: 15px; line-height: 20px;&quot;&gt;startActivity(new Intent(&quot;app://com.example.movies/viewmovie/5&quot;));&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&amp;nbsp;Using an implicit intent enables other applications to launch this activity directly. However, if your application isn&#39;t designed correctly this may cause problems. What if you haven&#39;t loaded the data you need for the activity? Let&#39;s imagine that you have a master-detail arrangement where activity A shows a list and activity B shows the detail for a list item. In a poor application design, activity A loads the data for all items and passes the information to activity B.&lt;br /&gt;
&lt;br /&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;http://1.bp.blogspot.com/-oQk-xsccHwA/ToMrpAmjFaI/AAAAAAAAIjs/fvONAYJsURk/s1600/bad.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/-oQk-xsccHwA/ToMrpAmjFaI/AAAAAAAAIjs/fvONAYJsURk/s1600/bad.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;
FAIL!&amp;nbsp;&lt;/div&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
In a better design, activity A loads only the data required to display the list. It should pass only an id to activity B which will load the detail page on it&#39;s own.&lt;br /&gt;
&lt;br /&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;http://4.bp.blogspot.com/-O0V1rKhoeRQ/ToMr24C2PII/AAAAAAAAIjw/RQftAqGhnrs/s1600/good.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://4.bp.blogspot.com/-O0V1rKhoeRQ/ToMr24C2PII/AAAAAAAAIjw/RQftAqGhnrs/s1600/good.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;
WINNING!&amp;nbsp;&lt;/div&gt;
&lt;br /&gt;
Each activity should have it&#39;s own Loader. The Android 3.0 SDK made the idea of loaders official, but the principle of each activity loading it&#39;s own data is solid even in older versions of the SDK.</content>
        <link rel='replies' type='application/atom+xml' href='https://drasticp.blogspot.com/feeds/7189389496409593587/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='https://drasticp.blogspot.com/2011/05/id-like-to-write-little-bit-about-best.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/7189389496409593587'/>
        <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/659383463377282367/posts/default/7189389496409593587'/>
        <link rel='alternate' type='text/html' href='https://drasticp.blogspot.com/2011/05/id-like-to-write-little-bit-about-best.html' title='Deep Linking in Android Applications'/>
        <author>
            <name>Don Archer</name>
            <uri>http://www.blogger.com/profile/04530356366419411562</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/>
        </author>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/-oQk-xsccHwA/ToMrpAmjFaI/AAAAAAAAIjs/fvONAYJsURk/s72-c/bad.png" height="72" width="72"/>
        <thr:total>0</thr:total>
    </entry>
</feed>